#Pengerjaan Mock Test ini menggunakan BigQuery
#Soal
PT VWXYZ mencatat transaksi hariannya di sheet dengan mengelompokkan data
menjadi kategori Order, Product dan Customers seperti di link dibawah ini
Dataset Superstore - BI Analyst (https://docs.google.com/spreadsheets/d/1IL0m7fCMmN7ZmWQl5mF_tmCEigvwm1rCfVMdFXvXH1s/edit#gid=1252260284)
Keterangan :
- Tabel Order berisi daftar pesanan customer disertai barang yang dipesan
- Tabel Categories berisi daftar barang dan identitasnya yang tersedia dan dijual di
PT VWXYZ
- Tabel Customers berisi daftar pelanggan dan identitasnya yang sudah
melakukan pemesanan
Perusahaan ingin membentuk metrics berdasarkan data tersebut menggunakan SQL.
Pertanyaan :
Buatlah SQL Statement untuk menampilkan metrics perusahaan dibawah ini :
1. Jumlah seluruh produk yang terjual
2. Jumlah unique customer yang telah memesan produk
3. Rata-rata profit dari seluruh order (dalam mata uang)
4. Berapa discount terkecil dari seluruh order
5. Jumlah seluruh produk dari kategori Furniture
6. Nama pelanggan yang membeli produk paling banyak (dalam quantity)
7. Nama pelanggan yang paling sering melakukan repeat order
8. Dari kota mana pelanggan yang paling sering melakukan repeat order
9. Order mana yang mendapatkan total discount paling kecil
10.Total profit yang datang dari produk dengan sub category Furnishings &
Supplies
11. Jumlah order yang berasal dari produk warna hitam (terdapat keterangan
“black” di nama produknya)
12.Jumlah order yang memiliki waktu pengiriman masih di hari yang sama dengan
waktu pemesanan

#Tahap Pertama yakni pembersihan data terlebih dahulu

#Tabel Order (Pada tabel ini terdapat data null dan pada kolom Region terdapat incosistent data)
with hiya as (SELECT Row_ID,	Order_ID,	Order_Date,	Ship_Date,	Ship_Mode	,Customer_ID	,Country	,City,	State,	Postal_Code, 
replace (Region, 'Southn', 'South') as Region,	Product_ID,	Sales,	Quantity,	Discount,	Profit
FROM `bie-wave-6.Gold_Challenge.Orders`
where Row_ID is not null)
Select * from hiya
order by Row_ID

#Tabel Categories (Pada tabel ini terdapat incosistant data, duplicate, dan perbaikan isi kolom product_name yang seharusnya berupa unique values seperti pada tabel product_id) 
with hiya as (with tabel as
(SELECT *
 from (select product_id 
              , replace(category,  'Office Supply', 'Office Supplies') as category
              , sub_category
              , product_name
              ,row_number() over(partition by product_id) as row_num FROM `bie-wave-6.Gold_Challenge.Categories`)
              ) 
select  
    product_id 
    ,category 
    ,sub_category
    ,product_name
from Tabel
where
    1=1
    and  row_num = 1)

SELECT  product_id 
    ,category 
    ,sub_category
    ,concat(product_id,' ',product_name) as product_name
     FROM hiya
     order by 1
 
#Tabel Customer (Tabel ini sudah memiliki kualitas data yang baik sehingga tidak perlu diperbaiki)

#Query terkait soal yang diberikan
#1. Jumlah seluruh produk yang terjual
SELECT sum(Quantity) as Produk_Terjual FROM `bie-wave-6.Current_Detail_Data.Orders_clean`

#2. Jumlah unique customer yang telah memesan produk
SELECT count (distinct(Customer_ID)) as Jumlah_Unik_Customer FROM `bie-wave-6.Current_Detail_Data.Orders_clean`

#3. Rata-rata profit dari seluruh order (dalam mata uang) [Disini saya mengasumsikan nilai profit dalam US dolar dan ingin dirubah menjadi rupiah dimana pada saat jawaban ini dibuat 1 US dolar = 14,852.60 rupiah
SELECT Avg(Profit)*14852.60 as Rerata_Profit_Rp FROM `bie-wave-6.Current_Detail_Data.Orders_clean` 

#4. Berapa discount terkecil dari seluruh order
SELECT Discount as Discount_Terkecil FROM `bie-wave-6.Current_Detail_Data.Orders_clean` 
where Discount > 0.0
order by 1 asc
limit 1

#5. Jumlah seluruh produk dari kategori Furniture
SELECT count(product_name) as Jumlah FROM `bie-wave-6.Current_Detail_Data.Categories_clean` 
where category = 'Furniture'

#6. Nama pelanggan yang membeli produk paling banyak (dalam quantity)
SELECT Customer_Name, sum(Quantity) as Jumlah_Pembelian
FROM `bie-wave-6.Current_Detail_Data.Orders_clean` as o join `bie-wave-6.Current_Detail_Data.Customer_clean` as c
On o.Customer_ID = c.Customer_ID
Group by 1
Order by 2 desc
limit 1

#7. Nama pelanggan yang paling sering melakukan repeat order
SELECT Customer_Name, count(Order_ID)-1 As jumlah_RO
FROM `bie-wave-6.Current_Detail_Data.Orders_clean` as o join `bie-wave-6.Current_Detail_Data.Customer_clean` as c
On o.Customer_ID = c.Customer_ID
Group by 1
Order by 2 desc
limit 1

#8. Dari kota mana pelanggan yang paling sering melakukan repeat order
with tabel as
(SELECT Customer_Name, City, count(Order_ID)-1 As jumlah_RO
FROM `bie-wave-6.Current_Detail_Data.Orders_clean` as o join `bie-wave-6.Current_Detail_Data.Customer_clean` as c
On o.Customer_ID = c.Customer_ID
group by 1,2)
select City, sum(tabel.jumlah_RO) as Repeat_Order
from tabel 
group by 1
order by 2 desc
limit 1

#9. Order mana yang mendapatkan total discount paling kecil
Select *
from (SELECT Order_ID, Sales/Quantity*Discount as Total_Diskon
FROM `bie-wave-6.Current_Detail_Data.Orders_clean`)
Where Total_Diskon > 0 
order by 2
limit 1

#10.Total profit yang datang dari produk dengan sub category Furnishings &
Supplies
SELECT sum(Profit) as Jumlah_Profit
from (Select sub_category, Profit
FROM `bie-wave-6.Current_Detail_Data.Orders_clean` as o join `bie-wave-6.Current_Detail_Data.Categories_clean` as c
on o.Product_ID = c.product_id
where sub_category = 'Furnishings' or sub_category = 'Supplies')

#11. Jumlah order yang berasal dari produk warna hitam (terdapat keterangan “black” di nama produknya)
Select count(Order_ID)
from(Select Order_ID, product_name
FROM `bie-wave-6.Current_Detail_Data.Orders_clean` as o join `bie-wave-6.Current_Detail_Data.Categories_clean` as c
on o.Product_ID = c.product_id
where product_name like '%black%')

#12.Jumlah order yang memiliki waktu pengiriman masih di hari yang sama dengan
waktu pemesanan
Select count(Order_ID) as jumlah_order
from(Select Order_ID, Order_Date, Ship_Date
FROM `bie-wave-6.Current_Detail_Data.Orders_clean`
where Order_Date = Ship_Date)

##Soal Tambahan
#Link soal (https://s3.ap-southeast-1.amazonaws.com/kinobi-asset-stg/upload/1656901408887-BI%20Engineer_Analyst%20SQL%20Mock%20Test-pages-2-4.pdf)
#SQL Test 2 (Optional)
Write a SQL query to select the 2nd highest salary in the engineering department. If
more than one person shares the highest salary, the query should select the next
highest salary.
#Query
Select salary 
from(Select name, rank() over (partition by name order by salary) as rankingsalary 
from employees as e left join departments as d
on e.id = d.id
where name = 'engineering')
where rankingsalary = 2

#SQL Test 3 (Opsional)
We’re given two tables, a users table with demographic information and the
neighborhood they live in and a neighborhoods table.
Write a query that returns all neighborhoods that have 0 users
#Query
SELECT name FROM neighborhood as n
where not exists (select 3 from users as u
                  where n.id = u.neighborhood_id)


